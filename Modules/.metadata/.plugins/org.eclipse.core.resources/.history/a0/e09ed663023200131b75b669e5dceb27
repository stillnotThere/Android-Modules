/**
 * @author Rohan K.M rohan.mahendroo@gmail.com
 * CallerService
 * com.acropolis.module.call
 * CallerService.java
 * Created - 2013-10-10 6:21:15 PM	
 * Modified - 2013-10-10 6:21:15 PM
 * TODO
 * NOTES - 
 */
package com.acropolis.module.call;

import android.app.Service;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.database.ContentObserver;
import android.os.IBinder;
import android.provider.CallLog;
import android.provider.CallLog.Calls;
import android.telephony.PhoneStateListener;
import android.telephony.TelephonyManager;

/**
 * @author CPH-iMac
 *
 */
public class CallerService extends Service
{

	/* (non-Javadoc)
	 * @see android.app.Service#onBind(android.content.Intent)
	 */
	@Override
	public IBinder onBind(Intent intent) {
		// TODO Auto-generated method stub
		return null;
	}
	
	public void onCreate()
	{
		setupIncomingListener();
		setupOutgoingListener();
	}
	
	public int onStartCommand(Intent intent,int flags,int startId)
	{
		return Service.START_STICKY;
	}
	
	public void setupIncomingListener()
	{
		TelephonyManager telephonyManager = (TelephonyManager)
				getApplicationContext().
				getSystemService(Context.TELEPHONY_SERVICE);
		
		telephonyManager.listen(new IncomingCallListener(),
				PhoneStateListener.LISTEN_CALL_STATE);
	}

	public void setupOutgoingListener()
	{
		String[] projection = {Calls.NUMBER,
				Calls.DURATION,
				Calls.TYPE};
		String selection = "";
		String[] selectionArgs = null;
		String sortOrder = ""+"desc";
		
		this.getContentResolver().registerContentObserver(
				CallLog.Calls.CONTENT_URI,true, new OutgoingCallObserver());
		
		ContentResolver contentResolver = (ContentResolver) 
				getContentResolver().query(
				android.provider.CallLog.Calls.CONTENT_URI, 
				projection, 
				selection, 
				selectionArgs,
				sortOrder);
		
//		String outgoingAction = TelephonyManager.ACTION_PHONE_STATE_CHANGED;
//		IntentFilter intentFilter = new IntentFilter(outgoingAction);
//		getApplicationContext().registerReceiver(
//				new OutgoingCallReceiver(), 
//				intentFilter
//				);
	}
	
	public class OutgoingCallObserver implements ContentObserver
	{
		
	}
	
}
