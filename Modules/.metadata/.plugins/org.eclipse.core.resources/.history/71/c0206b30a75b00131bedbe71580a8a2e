/**
 * @author Rohan K.M rohan.mahendroo@gmail.com
 * PersistenceData
 * com.app.project.acropolis.database
 * PersistenceData.java
 * Created - 2013-12-02 5:44:24 PM	
 * Modified - 2013-12-02 5:44:24 PM
 * TODO
 * NOTES - 
 */
package com.app.project.acropolis.database;

import android.content.Context;
import android.content.SharedPreferences;

import com.app.project.acropolis.GlobalConstants;
import com.app.project.acropolis.ProjectAcropolisActivity;

/**
 * @author CPH-iMac
 *
 */
public class PersistedData
{
	private Context context = ProjectAcropolisActivity.getContext();
	
	private final String NAME = "ProjectAcropolis_SP";
	
	private SharedPreferences getAppSharedPreferences()
	{
		return context.getSharedPreferences(
				NAME, Context.MODE_MULTI_PROCESS|Context.MODE_PRIVATE);
	}
	
	public void putData(String key, String data)
	{
		SharedPreferences sp = getAppSharedPreferences();
		sp.edit().putString(key, data).commit();
	}
	
	public String fetchData(String key)
	{
		String val = "";
		SharedPreferences sp = getAppSharedPreferences();
		val = sp.getString(
				key, GlobalConstants.PersistenceConstants._DEFAULT_VALUE);
		return val;
	}
	
	public boolean resetData()
	{
		static GlobalConstants.PersistenceConstants glb; 
		SharedPreferences.Editor editor = getAppSharedPreferences().edit().clear();
		editor.putString(glb., value)
		
		
		
		DBOpenHelper.blank_PHONENUMBER = 
					( (TelephonyManager) ProjectAcropolisActivity.getContext().
							getSystemService(Context.TELEPHONY_SERVICE)).
							getLine1Number();

			ContentValues cv = new ContentValues();			
			cv.put(DBOpenHelper.PHONENUMBER, DBOpenHelper.blank_PHONENUMBER);
			cv.put(DBOpenHelper.ROAMING, DBOpenHelper.blank_ROAMING);
			cv.put(DBOpenHelper.BILL_DATE, DBOpenHelper.blank_BILL_DATE);
			//local
			cv.put(DBOpenHelper.LOCAL_INCOMING, DBOpenHelper.blank_LOCAL_INCOMING);
			cv.put(DBOpenHelper.LOCAL_OUTGOING, DBOpenHelper.blank_LOCAL_OUTGOING);
			cv.put(DBOpenHelper.LOCAL_RECEIVED, DBOpenHelper.blank_LOCAL_RECEIVED);
			cv.put(DBOpenHelper.LOCAL_SENT, DBOpenHelper.blank_LOCAL_SENT);
			cv.put(DBOpenHelper.LOCAL_DOWNLOADED, DBOpenHelper.blank_LOCAL_DOWNLOADED);
			cv.put(DBOpenHelper.LOCAL_UPLOADED, DBOpenHelper.blank_LOCAL_UPLOADED);
			//roaming
			cv.put(DBOpenHelper.ROAM_INCOMING, DBOpenHelper.blank_ROAMING_INCOMING);
			cv.put(DBOpenHelper.ROAM_OUTGOING, DBOpenHelper.blank_ROAMING_OUTGOING);
			cv.put(DBOpenHelper.ROAM_RECEIVED, DBOpenHelper.blank_ROAMING_RECEIVED);
			cv.put(DBOpenHelper.ROAM_SENT, DBOpenHelper.blank_ROAMING_SENT);
			cv.put(DBOpenHelper.ROAM_DOWNLOADED, DBOpenHelper.blank_ROAMING_DOWNLOADED);
			cv.put(DBOpenHelper.ROAM_UPLOADED, DBOpenHelper.blank_ROAMING_UPLOADED);
			//plan
			//local
			cv.put(DBOpenHelper.PLAN_LOCAL_INCOMING, DBOpenHelper.blank_PLAN_LOCAL_INCOMING);
			cv.put(DBOpenHelper.PLAN_LOCAL_OUTGOING, DBOpenHelper.blank_PLAN_LOCAL_OUTGOING);
			cv.put(DBOpenHelper.PLAN_LOCAL_RECEIVED, DBOpenHelper.blank_PLAN_LOCAL_RECEIVED);
			cv.put(DBOpenHelper.PLAN_LOCAL_SENT, DBOpenHelper.blank_PLAN_LOCAL_SENT);
			cv.put(DBOpenHelper.PLAN_LOCAL_DOWNLOADED, DBOpenHelper.blank_PLAN_LOCAL_DOWNLOADED);
			cv.put(DBOpenHelper.PLAN_LOCAL_UPLOADED, DBOpenHelper.blank_PLAN_LOCAL_UPLOADED);
			//roam
			cv.put(DBOpenHelper.PLAN_ROAM_INCOMING, DBOpenHelper.blank_PLAN_ROAMING_INCOMING);
			cv.put(DBOpenHelper.PLAN_ROAM_OUTGOING, DBOpenHelper.blank_PLAN_ROAMING_OUTGOING);
			cv.put(DBOpenHelper.PLAN_ROAM_RECEIVED, DBOpenHelper.blank_PLAN_ROAMING_RECEIVED);
			cv.put(DBOpenHelper.PLAN_ROAM_SENT, DBOpenHelper.blank_PLAN_ROAMING_SENT);
			cv.put(DBOpenHelper.PLAN_ROAM_DOWNLOADED, DBOpenHelper.blank_PLAN_ROAMING_DOWNLOADED);
			cv.put(DBOpenHelper.PLAN_ROAM_UPLOADED, DBOpenHelper.blank_PLAN_ROAMING_UPLOADED);
		
				
				
				
		
		return true;
	}
	
}
