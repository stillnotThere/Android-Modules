/**
 * @author Rohan K.M rohan.mahendroo@gmail.com
 * RoamingListener
 * com.app.project.acropolis
 * RoamingListener.java
 * Created - 2013-10-11 3:33:19 PM	
 * Modified - 2013-10-11 3:33:19 PM
 * TODO
 * NOTES - 
 */
package com.app.project.acropolis;

import android.content.BroadcastReceiver;
import android.content.ContentValues;
import android.content.Context;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.telephony.TelephonyManager;

import com.app.project.acropolis.database.DBAdapter;
import com.app.project.acropolis.database.DBOpenHelper;

/**
 * @author CPH-iMac
 *
 */
public class RoamingListener extends BroadcastReceiver
{
	public final String[] CAN_OPERATORS = {"Rogers","TELUS"};
	public boolean roaming = false;

	public ConnectivityManager connectivityManager = null;
	public TelephonyManager telephonyManager = null;
	public NetworkInfo.State state = null;
	
	@Override
	public void onReceive(Context context, Intent intent)
	{
		telephonyManager = (TelephonyManager)
				context.getSystemService(Context.TELEPHONY_SERVICE);
//		connectivityManager = (ConnectivityManager) 
//				context.getSystemService(Context.CONNECTIVITY_SERVICE);
		if(telephonyManager.isNetworkRoaming())
			stateTheObvious();
		else
			stateTheObvious();
	}

	public void stateTheObvious()
	{
//		DBAdapter dbAdapter = new DBAdapter();
		
		if(state.compareTo(NetworkInfo.State.CONNECTED)==0)
		{
			if(telephonyManager.getNetworkOperatorName().length()>0)
			{
				for(int i=0;i<CAN_OPERATORS.length;i++)
				{
					if(telephonyManager.
							getNetworkOperatorName().equalsIgnoreCase(CAN_OPERATORS[i]))
					{
						roaming = false;
						break;
					}
					else
						roaming = true;
				}
				ContentValues cv = new ContentValues();
				cv.put(DBOpenHelper.ROAMING, String.valueOf(roaming));
				DBAdapter.update(cv);
			}
		}
		else
		{
			new Thread(new Runnable() 
			{
				public void run()
				{
					while(state.compareTo(NetworkInfo.State.CONNECTED)!=0)
					{
						Logger.Debug("no service");
						try 
						{
							Thread.sleep(5*1000);
						} catch (InterruptedException e) 
						{
							e.printStackTrace();
						}
					}
				}
			}).start();
		}
	}

}
