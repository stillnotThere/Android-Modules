/**
 * @author Rohan K.M rohan.mahendroo@gmail.com
 * ServerFormatter
 * com.app.project.acropolis.comm
 * ServerFormatter.java
 * Created - 2013-11-04 11:16:17 AM	
 * Modified - 2013-11-04 11:16:17 AM
 * TODO
 * NOTES - 
 */
package com.app.project.acropolis.comm;

import java.text.SimpleDateFormat;
import java.util.Calendar;

import com.app.project.acropolis.GlobalConstants;
import com.app.project.acropolis.database.DBAdapter;
import com.app.project.acropolis.database.DBOpenHelper;

/**
 * @author CPH-iMac
 *
 */
public class ServerFormatter implements Runnable 
{
	ServerConnector serverConnector = new ServerConnector();
	Thread serverConnThread = null;
	DBAdapter dbAdapter = new DBAdapter();
	
	SimpleDateFormat sdf = new SimpleDateFormat(
			GlobalConstants.TIMESTAMP_PATTERN);
	
	static GlobalConstants glb = new GlobalConstants();
	
	String formattedData = "";

	String db_ph = "";
	String device_timeStamp = "";
	String server_timeStamp = "";
	String db_roam = "";
	String db_down = "";
	String db_up= "";
	String db_rcv = "";
	String db_snt = "";
	String db_out = "";
	String db_in = "";
	
	String f_ph = "";
	String f_dtime = "";
	String f_stime = "";
	String f_roam = "";
	String f_lat = "";
	String f_lng = "";
	String f_acc = "";
	String f_down = "";
	String f_up = "";
	String f_rcv = "";
	String f_snt = "";
	String f_in = "";
	String f_out = "";
	
	
	public void run()
	{
		sendMsg();
	}
	
	public void sendMsg()
	{
		openConnection();
		collectData();
	}
	
	public void collectData()
	{
		device_timeStamp = sdf.format(Calendar.getInstance().getTime());
		server_timeStamp = sdf.format(
				Calendar.getInstance(glb.SERVER_TIMEZONE).getTime());
		
		db_ph = dbAdapter.getValue(DBOpenHelper.PHONENUMBER);
		db_roam = dbAdapter.getValue(DBOpenHelper.ROAMING);
		db_down = dbAdapter.getValue(DBOpenHelper.DOWNLOADED);
		db_up = dbAdapter.getValue(DBOpenHelper.UPLOADED);
		db_rcv = dbAdapter.getValue(DBOpenHelper.RECEIVED);
		db_snt = dbAdapter.getValue(DBOpenHelper.SENT);
		db_in = dbAdapter.getValue(DBOpenHelper.INCOMING);
		db_out = dbAdapter.getValue(DBOpenHelper.OUTGOING);
		
		f_ph = db_ph;
		f_dtime = device_timeStamp;
		f_stime = server_timeStamp;
		f_roam = db_roam;
		f_lat = glb.LAT;
		f_lng = glb.LNG;
		f_acc = glb.ACC;
		f_down = glb.DOWNLOAD.concat(db_down);
		f_up = glb.UPLOAD.concat(db_up);
		f_rcv = glb.RECEIVED.concat(db_rcv);
		f_snt = glb.SENT.concat(db_snt);
		f_in = glb.INCOMING.concat(db_in);
		f_out = glb.OUTGOING.concat(db_out);
		
		formattedData = glb.START + glb.DELIM + glb.VERSION + glb.DELIM + 
				glb.DATASTREAM + glb.DELIM + f_ph + glb.DELIM + 
				f_dtime + glb.DELIM + f_stime +	f_roam + glb.DELIM + 
				f_lat + glb.DELIM + f_lng + glb.DELIM +	f_acc + glb.DELIM + 
				f_down + glb.DELIM + f_up + glb.DELIM +
				f_rcv + glb.DELIM + f_snt + glb.DELIM +
				f_in + glb.DELIM +	f_out + 
				glb.END;
				
		
	}
	
	public void openConnection()
	{
		serverConnThread = new Thread(serverConnector);
		serverConnThread.start();
	}
	
	public void sendData()
	{
		
	}
	
	public void closeConnection()
	{
		
	}
	
}
